// Objective-C API for talking to github.com/yggdrasil-network/yggdrasil-go/src/config Go package.
//   gobind -lang=objc github.com/yggdrasil-network/yggdrasil-go/src/config
//
// File is generated by gobind. Do not edit.

#ifndef __Config_H__
#define __Config_H__

@import Foundation;
#include "ref.h"
#include "Universe.objc.h"


@class ConfigMulticastInterfaceConfig;
@class ConfigNodeConfig;

@interface ConfigMulticastInterfaceConfig : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull regex;
@property (nonatomic) BOOL beacon;
@property (nonatomic) BOOL listen;
// skipped field MulticastInterfaceConfig.Port with unsupported type: uint16

@end

/**
 * NodeConfig is the main configuration structure, containing configuration
options that are necessary for an Yggdrasil node to run. You will need to
supply one of these structs to the Yggdrasil core when starting a node.
 */
@interface ConfigNodeConfig : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
// skipped field NodeConfig.RWMutex with unsupported type: sync.RWMutex

// skipped field NodeConfig.Peers with unsupported type: []string

// skipped field NodeConfig.InterfacePeers with unsupported type: map[string][]string

// skipped field NodeConfig.Listen with unsupported type: []string

@property (nonatomic) NSString* _Nonnull adminListen;
// skipped field NodeConfig.MulticastInterfaces with unsupported type: []github.com/yggdrasil-network/yggdrasil-go/src/config.MulticastInterfaceConfig

// skipped field NodeConfig.AllowedPublicKeys with unsupported type: []string

@property (nonatomic) NSString* _Nonnull publicKey;
@property (nonatomic) NSString* _Nonnull privateKey;
@property (nonatomic) NSString* _Nonnull ifName;
// skipped field NodeConfig.IfMTU with unsupported type: uint64

@property (nonatomic) BOOL nodeInfoPrivacy;
// skipped field NodeConfig.NodeInfo with unsupported type: map[string]interface{}

- (void)lock;
/**
 * NewSigningKeys replaces the signing keypair in the NodeConfig with a new
signing keypair. The signing keys are used by the switch to derive the
structure of the spanning tree.
 */
- (void)newKeys;
- (void)rLock;
// skipped method NodeConfig.RLocker with unsupported parameter or return types

- (void)rUnlock;
- (void)unlock;
@end

#endif
